#!/usr/bin/env ruby

require "tty-prompt"
require "aws/asmr"

case(ARGV[0])
when 'clear'
  Aws::ASMR::Cache.destroy!
  exit(0)
when 'version'
  require "aws/asmr/version"
  puts Aws::ASMR::VERSION
  exit(0)
end

name = ARGV[0]
assume_role_arn = Aws::ASMR::Alias.get(name)&.arn || name

def run(shell_variables=[])
  subcommand = ARGV[1..-1]
  if subcommand.empty?
    exec("echo \"#{shell_variables.join($/)}\"")
  else
    exec([*shell_variables, *subcommand].join(' '))
  end
end 

subcommand = ARGV[1..-1]

if cache = Aws::ASMR::Cache.get(assume_role_arn)
  run(cache.shell_variables)
end

prompt = TTY::Prompt.new

begin
  serial_number = Aws::ASMR.detect_mfa_device_serial_number
  assume_role_args = if serial_number
    token_code = prompt.ask("Type MFA token code:")
    {serial_number: serial_number, token_code: token_code}
  else
    {}
  end

  res = Aws::ASMR.assume_role(assume_role_arn, **assume_role_args)
  cache = Aws::ASMR::Cache.new(**res.credentials.to_h)
  cache.save!(assume_role_arn)
  run(cache.shell_variables)
rescue => e
  STDERR.puts e.message
  exit(1)
end